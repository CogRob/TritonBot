// Copyright (c) 2018, The Regents of the University of California
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// * Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the
//   documentation and/or other materials provided with the distribution.
// * Neither the name of the University of California nor the
//   names of its contributors may be used to endorse or promote products
//   derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OF THE UNIVERSITY OF CALIFORNIA
// BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package cogrob.dialogue.logging;

import "util/proto/timestamp.proto";

// Next TAG: 10
message VoiceRecognitionLog {
  util.proto.Timestamp start_timestamp = 1;
  bytes audio_recording = 2;  // Linear PCM, 16 bits, 16000 Hz, Little endian

  // Parameters to start recognition.
  repeated string hints = 5;
  int64 max_alternatives = 6;
  int64 listen_duration_sec = 7;
  int64 max_recognition_duration_sec = 8;
  bool suppress_interim_results = 9;

  message IntrimResults {
    float received_time_sec = 1;
    string transcript = 2;
    float confidence = 3;
    float stability = 4;
    bool is_final = 5;
  }

  repeated IntrimResults intrim_results = 3;
  string final_results = 4;
}

message WakeWordLog {
  util.proto.Timestamp timestamp = 1;
  string text = 2;
}
