version: "2.2"
services:
  freight_base:
    image: tritonbot.github.io/freight_stock
    command: roslaunch /root/freight_base/robot.launch --wait
    volumes:
      - ./freight_base:/root/freight_base:ro
    network_mode: "host"
    privileged: true
    network_mode: "host"
    privileged: true
    cap_add:
      - SYS_NICE
      - IPC_LOCK
    ulimits:
      memlock: -1
      nice: -20
    cpu_shares: 262144
    mem_reservation: 512m
    restart: always
    init: true

  imu_patch:
    image: tritonbot.github.io/ros_imu_patch
    command: roslaunch /root/imu_patch/imu_patch.launch --wait
    volumes:
      - ./imu_patch:/root/imu_patch:ro
    network_mode: "host"
    restart: always
    init: true

  back_laser:
    image: tritonbot.github.io/freight_stock
    command: roslaunch /root/back_laser/back_laser.launch --wait
    volumes:
      - ./back_laser:/root/back_laser:ro
    privileged: true
    network_mode: "host"
    restart: always
    init: true

  head_laser:
    image: tritonbot.github.io/fetch_deploy_base
    command: roslaunch /root/head_laser/head_laser.launch --wait
    volumes:
      - ./head_laser:/root/head_laser:ro
    privileged: true
    network_mode: "host"
    restart: always
    init: true

  teleop:
    image: tritonbot.github.io/freight_stock
    command: roslaunch /root/teleop/teleop.launch --wait
    volumes:
      - ./teleop:/root/teleop:ro
    network_mode: "host"
    privileged: true
    restart: always
    init: true

  usb_cam:
    image: tritonbot.github.io/fetch_deploy_base
    command: roslaunch /root/usb_cam/cogrob_usbcam.launch --wait
    volumes:
      - ./usb_cam:/root/usb_cam:ro
      - /dev:/mnt/host_dev:rw
    network_mode: "host"
    privileged: true
    restart: always
    init: true

  laser_repub:
    image: tritonbot.github.io/ros_laser_repub
    command: roslaunch /root/laser_repub/laser_repub_freight.launch --wait
    volumes:
      - ./laser_repub:/root/laser_repub:ro
    network_mode: "host"
    restart: always
    init: true

  navigation:
    image: tritonbot.github.io/ros_fetch_navigation
    command: roslaunch /root/navigation/freight_nav.launch --wait
    volumes:
      - ./navigation:/root/navigation:ro
    network_mode: "host"
    restart: always
    init: true

  cartographer_localization:
    image: tritonbot.github.io/ros_cartographer_fetch
    command: roslaunch /root/cartographer_localization/cartographer_localization.launch --wait
    volumes:
      - /home/cogrob_data/maps:/root/.ros/maps:ro
      - ./cartographer_localization:/root/cartographer_localization:ro
    network_mode: "host"
    restart: always
    init: true

  # FOR MONITOR ONLY, NOT CORE FUNCTION, NOT RELEASED
  # estop_server:
  #   image: tritonbot.github.io/ros_fetch_estop_server
  #   network_mode: "host"
  #   restart: always
  #   init: true

  enable_aux_breaker_1:
    image: tritonbot.github.io/fetch_deploy_base
    command: /root/enable_aux_breaker_1/enable_aux_breaker_1.sh
    volumes:
      - ./enable_aux_breaker_1:/root/enable_aux_breaker_1:ro
    network_mode: "host"
    restart: always
    init: true

  head_laser_servo:
    image: tritonbot.github.io/ros_freight_head_laser_servo
    command: roslaunch /root/head_laser_servo/head_laser_servo.launch --wait
    volumes:
      - ./head_laser_servo:/root/head_laser_servo:ro
      - /dev:/mnt/host_dev:rw
    privileged: true
    network_mode: "host"
    restart: always
    init: true
